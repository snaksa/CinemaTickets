<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A2sToWkBKxcmAAAAAElFTkSuQmCC
</value>
  </data>
</root>